ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32f4xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB239:
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** 
  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  59:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  60:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim10;
  61:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart6_rx;
  62:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart6_tx;
  63:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart6;
  64:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  65:Core/Src/stm32f4xx_it.c **** 
  66:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  67:Core/Src/stm32f4xx_it.c **** 
  68:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  70:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32f4xx_it.c **** /**
  72:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Core/Src/stm32f4xx_it.c ****   */
  74:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  75:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 75 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  76:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f4xx_it.c **** 
  78:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f4xx_it.c ****    while (1)
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s 			page 3


  36              		.loc 1 80 4 discriminator 1 view .LVU1
  81:Core/Src/stm32f4xx_it.c ****   {
  82:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 82 3 discriminator 1 view .LVU2
  80:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 80 10 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE239:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB240:
  83:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32f4xx_it.c **** }
  85:Core/Src/stm32f4xx_it.c **** 
  86:Core/Src/stm32f4xx_it.c **** /**
  87:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Core/Src/stm32f4xx_it.c ****   */
  89:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  90:Core/Src/stm32f4xx_it.c **** {
  52              		.loc 1 90 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  91:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Core/Src/stm32f4xx_it.c **** 
  93:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Core/Src/stm32f4xx_it.c ****   while (1)
  59              		.loc 1 94 3 discriminator 1 view .LVU5
  95:Core/Src/stm32f4xx_it.c ****   {
  96:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Core/Src/stm32f4xx_it.c ****   }
  60              		.loc 1 98 3 discriminator 1 view .LVU6
  94:Core/Src/stm32f4xx_it.c ****   {
  61              		.loc 1 94 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE240:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB241:
  99:Core/Src/stm32f4xx_it.c **** }
 100:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s 			page 4


 101:Core/Src/stm32f4xx_it.c **** /**
 102:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 103:Core/Src/stm32f4xx_it.c ****   */
 104:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 105:Core/Src/stm32f4xx_it.c **** {
  75              		.loc 1 105 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 106:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f4xx_it.c **** 
 108:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f4xx_it.c ****   while (1)
  82              		.loc 1 109 3 discriminator 1 view .LVU9
 110:Core/Src/stm32f4xx_it.c ****   {
 111:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f4xx_it.c ****   }
  83              		.loc 1 113 3 discriminator 1 view .LVU10
 109:Core/Src/stm32f4xx_it.c ****   {
  84              		.loc 1 109 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE241:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB242:
 114:Core/Src/stm32f4xx_it.c **** }
 115:Core/Src/stm32f4xx_it.c **** 
 116:Core/Src/stm32f4xx_it.c **** /**
 117:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 118:Core/Src/stm32f4xx_it.c ****   */
 119:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 120:Core/Src/stm32f4xx_it.c **** {
  98              		.loc 1 120 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 121:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Core/Src/stm32f4xx_it.c **** 
 123:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Core/Src/stm32f4xx_it.c ****   while (1)
 105              		.loc 1 124 3 discriminator 1 view .LVU13
 125:Core/Src/stm32f4xx_it.c ****   {
 126:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s 			page 5


 128:Core/Src/stm32f4xx_it.c ****   }
 106              		.loc 1 128 3 discriminator 1 view .LVU14
 124:Core/Src/stm32f4xx_it.c ****   {
 107              		.loc 1 124 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE242:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB243:
 129:Core/Src/stm32f4xx_it.c **** }
 130:Core/Src/stm32f4xx_it.c **** 
 131:Core/Src/stm32f4xx_it.c **** /**
 132:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Core/Src/stm32f4xx_it.c ****   */
 134:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 135:Core/Src/stm32f4xx_it.c **** {
 121              		.loc 1 135 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 136:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Core/Src/stm32f4xx_it.c **** 
 138:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Core/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 139 3 discriminator 1 view .LVU17
 140:Core/Src/stm32f4xx_it.c ****   {
 141:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 143 3 discriminator 1 view .LVU18
 139:Core/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 139 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE243:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB244:
 144:Core/Src/stm32f4xx_it.c **** }
 145:Core/Src/stm32f4xx_it.c **** 
 146:Core/Src/stm32f4xx_it.c **** /**
 147:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 148:Core/Src/stm32f4xx_it.c ****   */
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s 			page 6


 149:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 150:Core/Src/stm32f4xx_it.c **** {
 144              		.loc 1 150 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 151:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 152:Core/Src/stm32f4xx_it.c **** 
 153:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 154:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 155:Core/Src/stm32f4xx_it.c **** 
 156:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 157:Core/Src/stm32f4xx_it.c **** }
 149              		.loc 1 157 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE244:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB245:
 158:Core/Src/stm32f4xx_it.c **** 
 159:Core/Src/stm32f4xx_it.c **** /**
 160:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 161:Core/Src/stm32f4xx_it.c ****   */
 162:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 163:Core/Src/stm32f4xx_it.c **** {
 163              		.loc 1 163 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 164:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 165:Core/Src/stm32f4xx_it.c **** 
 166:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 167:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 168:Core/Src/stm32f4xx_it.c **** 
 169:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 170:Core/Src/stm32f4xx_it.c **** }
 168              		.loc 1 170 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE245:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	PendSV_Handler:
 181              	.LFB246:
 171:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s 			page 7


 172:Core/Src/stm32f4xx_it.c **** /**
 173:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 174:Core/Src/stm32f4xx_it.c ****   */
 175:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 176:Core/Src/stm32f4xx_it.c **** {
 182              		.loc 1 176 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 177:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 178:Core/Src/stm32f4xx_it.c **** 
 179:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 180:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 181:Core/Src/stm32f4xx_it.c **** 
 182:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 183:Core/Src/stm32f4xx_it.c **** }
 187              		.loc 1 183 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE246:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB247:
 184:Core/Src/stm32f4xx_it.c **** 
 185:Core/Src/stm32f4xx_it.c **** /**
 186:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 187:Core/Src/stm32f4xx_it.c ****   */
 188:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 189:Core/Src/stm32f4xx_it.c **** {
 201              		.loc 1 189 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI0:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 190:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 191:Core/Src/stm32f4xx_it.c **** 
 192:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 193:Core/Src/stm32f4xx_it.c ****   HAL_IncTick();
 210              		.loc 1 193 3 view .LVU27
 211 0002 FFF7FEFF 		bl	HAL_IncTick
 212              	.LVL0:
 194:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 195:Core/Src/stm32f4xx_it.c **** 
 196:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 197:Core/Src/stm32f4xx_it.c **** }
 213              		.loc 1 197 1 is_stmt 0 view .LVU28
 214 0006 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s 			page 8


 215              		.cfi_endproc
 216              	.LFE247:
 218              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 219              		.align	1
 220              		.global	TIM1_UP_TIM10_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 225              	TIM1_UP_TIM10_IRQHandler:
 226              	.LFB248:
 198:Core/Src/stm32f4xx_it.c **** 
 199:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 200:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 201:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 202:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 203:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 204:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 205:Core/Src/stm32f4xx_it.c **** 
 206:Core/Src/stm32f4xx_it.c **** /**
 207:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 208:Core/Src/stm32f4xx_it.c ****   */
 209:Core/Src/stm32f4xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 210:Core/Src/stm32f4xx_it.c **** {
 227              		.loc 1 210 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231 0000 08B5     		push	{r3, lr}
 232              	.LCFI1:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
 211:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 212:Core/Src/stm32f4xx_it.c **** 
 213:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 214:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 236              		.loc 1 214 3 view .LVU30
 237 0002 0348     		ldr	r0, .L18
 238 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 239              	.LVL1:
 215:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim10);
 240              		.loc 1 215 3 view .LVU31
 241 0008 0248     		ldr	r0, .L18+4
 242 000a FFF7FEFF 		bl	HAL_TIM_IRQHandler
 243              	.LVL2:
 216:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */
 217:Core/Src/stm32f4xx_it.c **** 
 218:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
 219:Core/Src/stm32f4xx_it.c **** }
 244              		.loc 1 219 1 is_stmt 0 view .LVU32
 245 000e 08BD     		pop	{r3, pc}
 246              	.L19:
 247              		.align	2
 248              	.L18:
 249 0010 00000000 		.word	htim1
 250 0014 00000000 		.word	htim10
 251              		.cfi_endproc
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s 			page 9


 252              	.LFE248:
 254              		.section	.text.TIM1_TRG_COM_TIM11_IRQHandler,"ax",%progbits
 255              		.align	1
 256              		.global	TIM1_TRG_COM_TIM11_IRQHandler
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 261              	TIM1_TRG_COM_TIM11_IRQHandler:
 262              	.LFB249:
 220:Core/Src/stm32f4xx_it.c **** 
 221:Core/Src/stm32f4xx_it.c **** /**
 222:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 trigger and commutation interrupts and TIM11 global interrupt
 223:Core/Src/stm32f4xx_it.c ****   */
 224:Core/Src/stm32f4xx_it.c **** void TIM1_TRG_COM_TIM11_IRQHandler(void)
 225:Core/Src/stm32f4xx_it.c **** {
 263              		.loc 1 225 1 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267 0000 08B5     		push	{r3, lr}
 268              	.LCFI2:
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 3, -8
 271              		.cfi_offset 14, -4
 226:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 0 */
 227:Core/Src/stm32f4xx_it.c **** 
 228:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 0 */
 229:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 272              		.loc 1 229 3 view .LVU34
 273 0002 0248     		ldr	r0, .L22
 274 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 275              	.LVL3:
 230:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 1 */
 231:Core/Src/stm32f4xx_it.c **** 
 232:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 1 */
 233:Core/Src/stm32f4xx_it.c **** }
 276              		.loc 1 233 1 is_stmt 0 view .LVU35
 277 0008 08BD     		pop	{r3, pc}
 278              	.L23:
 279 000a 00BF     		.align	2
 280              	.L22:
 281 000c 00000000 		.word	htim1
 282              		.cfi_endproc
 283              	.LFE249:
 285              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 286              		.align	1
 287              		.global	DMA2_Stream0_IRQHandler
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 292              	DMA2_Stream0_IRQHandler:
 293              	.LFB250:
 234:Core/Src/stm32f4xx_it.c **** 
 235:Core/Src/stm32f4xx_it.c **** /**
 236:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream0 global interrupt.
 237:Core/Src/stm32f4xx_it.c ****   */
 238:Core/Src/stm32f4xx_it.c **** void DMA2_Stream0_IRQHandler(void)
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s 			page 10


 239:Core/Src/stm32f4xx_it.c **** {
 294              		.loc 1 239 1 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298 0000 08B5     		push	{r3, lr}
 299              	.LCFI3:
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 3, -8
 302              		.cfi_offset 14, -4
 240:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 241:Core/Src/stm32f4xx_it.c **** 
 242:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 243:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 303              		.loc 1 243 3 view .LVU37
 304 0002 0248     		ldr	r0, .L26
 305 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 306              	.LVL4:
 244:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 245:Core/Src/stm32f4xx_it.c **** 
 246:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 247:Core/Src/stm32f4xx_it.c **** }
 307              		.loc 1 247 1 is_stmt 0 view .LVU38
 308 0008 08BD     		pop	{r3, pc}
 309              	.L27:
 310 000a 00BF     		.align	2
 311              	.L26:
 312 000c 00000000 		.word	hdma_adc1
 313              		.cfi_endproc
 314              	.LFE250:
 316              		.section	.text.DMA2_Stream1_IRQHandler,"ax",%progbits
 317              		.align	1
 318              		.global	DMA2_Stream1_IRQHandler
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 323              	DMA2_Stream1_IRQHandler:
 324              	.LFB251:
 248:Core/Src/stm32f4xx_it.c **** 
 249:Core/Src/stm32f4xx_it.c **** /**
 250:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream1 global interrupt.
 251:Core/Src/stm32f4xx_it.c ****   */
 252:Core/Src/stm32f4xx_it.c **** void DMA2_Stream1_IRQHandler(void)
 253:Core/Src/stm32f4xx_it.c **** {
 325              		.loc 1 253 1 is_stmt 1 view -0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329 0000 08B5     		push	{r3, lr}
 330              	.LCFI4:
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 3, -8
 333              		.cfi_offset 14, -4
 254:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 0 */
 255:Core/Src/stm32f4xx_it.c **** 
 256:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 0 */
 257:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart6_rx);
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s 			page 11


 334              		.loc 1 257 3 view .LVU40
 335 0002 0248     		ldr	r0, .L30
 336 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 337              	.LVL5:
 258:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 1 */
 259:Core/Src/stm32f4xx_it.c **** 
 260:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 1 */
 261:Core/Src/stm32f4xx_it.c **** }
 338              		.loc 1 261 1 is_stmt 0 view .LVU41
 339 0008 08BD     		pop	{r3, pc}
 340              	.L31:
 341 000a 00BF     		.align	2
 342              	.L30:
 343 000c 00000000 		.word	hdma_usart6_rx
 344              		.cfi_endproc
 345              	.LFE251:
 347              		.section	.text.DMA2_Stream6_IRQHandler,"ax",%progbits
 348              		.align	1
 349              		.global	DMA2_Stream6_IRQHandler
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 354              	DMA2_Stream6_IRQHandler:
 355              	.LFB252:
 262:Core/Src/stm32f4xx_it.c **** 
 263:Core/Src/stm32f4xx_it.c **** /**
 264:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream6 global interrupt.
 265:Core/Src/stm32f4xx_it.c ****   */
 266:Core/Src/stm32f4xx_it.c **** void DMA2_Stream6_IRQHandler(void)
 267:Core/Src/stm32f4xx_it.c **** {
 356              		.loc 1 267 1 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360 0000 08B5     		push	{r3, lr}
 361              	.LCFI5:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 3, -8
 364              		.cfi_offset 14, -4
 268:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream6_IRQn 0 */
 269:Core/Src/stm32f4xx_it.c **** 
 270:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream6_IRQn 0 */
 271:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart6_tx);
 365              		.loc 1 271 3 view .LVU43
 366 0002 0248     		ldr	r0, .L34
 367 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 368              	.LVL6:
 272:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream6_IRQn 1 */
 273:Core/Src/stm32f4xx_it.c **** 
 274:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream6_IRQn 1 */
 275:Core/Src/stm32f4xx_it.c **** }
 369              		.loc 1 275 1 is_stmt 0 view .LVU44
 370 0008 08BD     		pop	{r3, pc}
 371              	.L35:
 372 000a 00BF     		.align	2
 373              	.L34:
 374 000c 00000000 		.word	hdma_usart6_tx
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s 			page 12


 375              		.cfi_endproc
 376              	.LFE252:
 378              		.section	.text.USART6_IRQHandler,"ax",%progbits
 379              		.align	1
 380              		.global	USART6_IRQHandler
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 385              	USART6_IRQHandler:
 386              	.LFB253:
 276:Core/Src/stm32f4xx_it.c **** 
 277:Core/Src/stm32f4xx_it.c **** /**
 278:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART6 global interrupt.
 279:Core/Src/stm32f4xx_it.c ****   */
 280:Core/Src/stm32f4xx_it.c **** void USART6_IRQHandler(void)
 281:Core/Src/stm32f4xx_it.c **** {
 387              		.loc 1 281 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391 0000 08B5     		push	{r3, lr}
 392              	.LCFI6:
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 3, -8
 395              		.cfi_offset 14, -4
 282:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART6_IRQn 0 */
 283:Core/Src/stm32f4xx_it.c **** 
 284:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART6_IRQn 0 */
 285:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart6);
 396              		.loc 1 285 3 view .LVU46
 397 0002 0248     		ldr	r0, .L38
 398 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 399              	.LVL7:
 286:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART6_IRQn 1 */
 287:Core/Src/stm32f4xx_it.c **** 
 288:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART6_IRQn 1 */
 289:Core/Src/stm32f4xx_it.c **** }
 400              		.loc 1 289 1 is_stmt 0 view .LVU47
 401 0008 08BD     		pop	{r3, pc}
 402              	.L39:
 403 000a 00BF     		.align	2
 404              	.L38:
 405 000c 00000000 		.word	huart6
 406              		.cfi_endproc
 407              	.LFE253:
 409              		.text
 410              	.Letext0:
 411              		.file 2 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/machine/_default_ty
 412              		.file 3 "/opt/ST/STM32CubeCLT_1.16.0/GNU-tools-for-STM32/arm-none-eabi/include/sys/_stdint.h"
 413              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 414              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 415              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 416              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 417              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 418              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:21     .text.NMI_Handler:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:27     .text.NMI_Handler:00000000 NMI_Handler
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:44     .text.HardFault_Handler:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:67     .text.MemManage_Handler:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:90     .text.BusFault_Handler:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:113    .text.UsageFault_Handler:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:136    .text.SVC_Handler:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:142    .text.SVC_Handler:00000000 SVC_Handler
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:155    .text.DebugMon_Handler:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:161    .text.DebugMon_Handler:00000000 DebugMon_Handler
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:174    .text.PendSV_Handler:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:180    .text.PendSV_Handler:00000000 PendSV_Handler
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:193    .text.SysTick_Handler:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:199    .text.SysTick_Handler:00000000 SysTick_Handler
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:219    .text.TIM1_UP_TIM10_IRQHandler:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:225    .text.TIM1_UP_TIM10_IRQHandler:00000000 TIM1_UP_TIM10_IRQHandler
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:249    .text.TIM1_UP_TIM10_IRQHandler:00000010 $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:255    .text.TIM1_TRG_COM_TIM11_IRQHandler:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:261    .text.TIM1_TRG_COM_TIM11_IRQHandler:00000000 TIM1_TRG_COM_TIM11_IRQHandler
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:281    .text.TIM1_TRG_COM_TIM11_IRQHandler:0000000c $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:286    .text.DMA2_Stream0_IRQHandler:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:292    .text.DMA2_Stream0_IRQHandler:00000000 DMA2_Stream0_IRQHandler
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:312    .text.DMA2_Stream0_IRQHandler:0000000c $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:317    .text.DMA2_Stream1_IRQHandler:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:323    .text.DMA2_Stream1_IRQHandler:00000000 DMA2_Stream1_IRQHandler
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:343    .text.DMA2_Stream1_IRQHandler:0000000c $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:348    .text.DMA2_Stream6_IRQHandler:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:354    .text.DMA2_Stream6_IRQHandler:00000000 DMA2_Stream6_IRQHandler
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:374    .text.DMA2_Stream6_IRQHandler:0000000c $d
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:379    .text.USART6_IRQHandler:00000000 $t
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:385    .text.USART6_IRQHandler:00000000 USART6_IRQHandler
/var/folders/5c/srt4fy4j1pd641bjfx75k5000000gn/T//ccS5YvM7.s:405    .text.USART6_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_TIM_IRQHandler
htim1
htim10
HAL_DMA_IRQHandler
hdma_adc1
hdma_usart6_rx
hdma_usart6_tx
HAL_UART_IRQHandler
huart6
